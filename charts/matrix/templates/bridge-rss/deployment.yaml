{{- if .Values.bridges.rss.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "matrix.fullname" . }}-bridge-rss
  labels:
{{ include "matrix.labels" . | indent 4 }}
spec:
  revisionHistoryLimit: {{ .Values.bridges.rss.revisionHistoryLimit }}
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "matrix.name" . }}-bridge-rss
      app.kubernetes.io/instance: {{ .Release.Name }}
      matrix-chart/allow-synapse-access: allow
  template:
    metadata:
      annotations:
        # re-roll deployment on config change
        checksum/rss-registration: {{ include (print $.Template.BasePath "/bridge-rss/secret-registration.yaml") . | sha256sum }}
      labels:
        app.kubernetes.io/name: {{ include "matrix.name" . }}-bridge-rss
        app.kubernetes.io/instance: {{ .Release.Name }}
        matrix-chart/allow-synapse-access: allow
    spec:
      {{- if .Values.bridges.affinity }}
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - {{ include "matrix.name" . }}-synapse
                  - key: app.kubernetes.io/instance
                    operator: In
                    values:
                      - {{ .Release.Name }}
              topologyKey: kubernetes.io/hostname
      {{- end }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.bridges.rss.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        - name: load-config
          {{- if .Values.bridges.rss.registration.existingSecret }}
          image: "mikefarah/yq:latest"
          {{- else }}
          image: "alpine:latest"
          {{- end }}
          imagePullPolicy: {{ .Values.bridges.rss.image.pullPolicy }}
          command:
            - /bin/sh
            - -ec
            - |
              cp /load/registration.yaml /data/registration.yaml && \
              cp /load/config.yml /data/config.yml && \
              cp /load/feeds.yml /data/feeds.yml && \
              {{- if .Values.bridges.rss.registration.existingSecret }}
              echo "Starting yq of registration.yaml" && \
              yq eval -i '.as_token = env(AS_TOKEN)' /data/registration.yaml && \
              yq eval -i '.hs_token = env(HS_TOKEN)' /data/registration.yaml && \

              yq eval -i '.app_service.as_token = env(AS_TOKEN)' /data/config.yml && \
              yq eval -i '.app_service.hs_token = env(HS_TOKEN)' /data/config.yml && \
              {{- end }}
              cp /data/registration.yaml /bridges/rss.yaml
          {{- if .Values.bridges.rss.registration.existingSecret }}
          env:
            - name: AS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bridges.rss.registration.existingSecret }}
                  key: {{ .Values.bridges.rss.registration.existingSecretKeys.as_token }}
            - name: HS_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.bridges.rss.registration.existingSecret }}
                  key: {{ .Values.bridges.rss.registration.existingSecretKeys.hs_token }}
          {{- end }}
          volumeMounts:
            - name: load
              mountPath: /load
            - name: data
              mountPath: /data
            - name: bridges
              mountPath: /bridges
          {{- with .Values.bridges.rss.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      containers:
        - name: "bridge-rss"
          image: "{{ .Values.bridges.rss.image.repository }}:{{ .Values.bridges.rss.image.tag }}"
          imagePullPolicy: {{ .Values.bridges.rss.image.pullPolicy }}
          env:
          ports:
            - name: appservice
              containerPort: 80
              protocol: TCP
          volumeMounts:
            - name: data
              mountPath: /data
           {{- with .Values.bridges.rss.extraVolumeMounts }}
             {{- toYaml . | nindent 12 }}
           {{- end }}
          {{- with .Values.bridges.rss.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          {{- with .Values.bridges.rss.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: load
          projected:
            sources:
              - secret:
                  name: {{ include "matrix.rss.configSecret" . }}
              - secret:
                  name: {{ include "matrix.rss.registrationSecret" . }}
              - secret:
                  name: {{ include "matrix.rss.feedsSecret" . }}
        - name: data
          emptyDir:
            sizeLimit: 10Mi
        - name: bridges
          persistentVolumeClaim:
            {{- if not .Values.bridges.volume.existingClaim }}
            claimName: "{{ include "matrix.fullname" . }}-bridges"
            {{- else -}}
            claimName: {{ .Values.bridges.volume.existingClaim }}
            {{- end }}
        {{- with .Values.bridges.rss.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
{{- end }}
